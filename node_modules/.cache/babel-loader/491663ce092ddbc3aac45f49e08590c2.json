{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\BaiHocReactjs\\\\reactjs_bai5\\\\src\\\\pages\\\\Admin\\\\Films\\\\Films.js\";\nimport React from 'react';\nimport { Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Films() {\n  const data = [{\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park'\n  }, {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park'\n  }, {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park'\n  }, {\n    key: '4',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park'\n  }];\n\n  function onChange(pagination, filters, sorter, extra) {\n    console.log('params', pagination, filters, sorter, extra);\n  }\n\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    filters: [{\n      text: 'Joe',\n      value: 'Joe'\n    }, {\n      text: 'Category 1',\n      value: 'Category 1',\n      children: [{\n        text: 'Yellow',\n        value: 'Yellow'\n      }, {\n        text: 'Pink',\n        value: 'Pink'\n      }]\n    }, {\n      text: 'Category 2',\n      value: 'Category 2',\n      children: [{\n        text: 'Green',\n        value: 'Green'\n      }, {\n        text: 'Black',\n        value: 'Black'\n      }]\n    }],\n    filterMode: 'tree',\n    filterSearch: true,\n    onFilter: (value, record) => record.name.includes(value),\n    width: '30%'\n  }, {\n    title: 'Age',\n    dataIndex: 'age',\n    sorter: (a, b) => a.age - b.age\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    filters: [{\n      text: 'London',\n      value: 'London'\n    }, {\n      text: 'New York',\n      value: 'New York'\n    }],\n    onFilter: (value, record) => record.address.startsWith(value),\n    filterSearch: true,\n    width: '40%'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Qu\\u1EA3n l\\xFD phim\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      dataSource: data,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n}\n_c = Films;\n\nvar _c;\n\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/BaiHocReactjs/reactjs_bai5/src/pages/Admin/Films/Films.js"],"names":["React","Table","Films","data","key","name","age","address","onChange","pagination","filters","sorter","extra","console","log","columns","title","dataIndex","text","value","children","filterMode","filterSearch","onFilter","record","includes","width","a","b","startsWith"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC5B,QAAMC,IAAI,GAAG,CACT;AACIC,IAAAA,GAAG,EAAE,GADT;AAEIC,IAAAA,IAAI,EAAE,YAFV;AAGIC,IAAAA,GAAG,EAAE,EAHT;AAIIC,IAAAA,OAAO,EAAE;AAJb,GADS,EAOT;AACIH,IAAAA,GAAG,EAAE,GADT;AAEIC,IAAAA,IAAI,EAAE,WAFV;AAGIC,IAAAA,GAAG,EAAE,EAHT;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAPS,EAaT;AACIH,IAAAA,GAAG,EAAE,GADT;AAEIC,IAAAA,IAAI,EAAE,WAFV;AAGIC,IAAAA,GAAG,EAAE,EAHT;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAbS,EAmBT;AACIH,IAAAA,GAAG,EAAE,GADT;AAEIC,IAAAA,IAAI,EAAE,SAFV;AAGIC,IAAAA,GAAG,EAAE,EAHT;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAnBS,CAAb;;AA0BA,WAASC,QAAT,CAAkBC,UAAlB,EAA8BC,OAA9B,EAAuCC,MAAvC,EAA+CC,KAA/C,EAAsD;AAClDC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,UAAtB,EAAkCC,OAAlC,EAA2CC,MAA3C,EAAmDC,KAAnD;AACH;;AACD,QAAMG,OAAO,GAAG,CACZ;AACIC,IAAAA,KAAK,EAAE,MADX;AAEIC,IAAAA,SAAS,EAAE,MAFf;AAGIP,IAAAA,OAAO,EAAE,CACL;AACIQ,MAAAA,IAAI,EAAE,KADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADK,EAKL;AACID,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,KAAK,EAAE,YAFX;AAGIC,MAAAA,QAAQ,EAAE,CACN;AACIF,QAAAA,IAAI,EAAE,QADV;AAEIC,QAAAA,KAAK,EAAE;AAFX,OADM,EAKN;AACID,QAAAA,IAAI,EAAE,MADV;AAEIC,QAAAA,KAAK,EAAE;AAFX,OALM;AAHd,KALK,EAmBL;AACID,MAAAA,IAAI,EAAE,YADV;AAEIC,MAAAA,KAAK,EAAE,YAFX;AAGIC,MAAAA,QAAQ,EAAE,CACN;AACIF,QAAAA,IAAI,EAAE,OADV;AAEIC,QAAAA,KAAK,EAAE;AAFX,OADM,EAKN;AACID,QAAAA,IAAI,EAAE,OADV;AAEIC,QAAAA,KAAK,EAAE;AAFX,OALM;AAHd,KAnBK,CAHb;AAqCIE,IAAAA,UAAU,EAAE,MArChB;AAsCIC,IAAAA,YAAY,EAAE,IAtClB;AAuCIC,IAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmBA,MAAM,CAACnB,IAAP,CAAYoB,QAAZ,CAAqBN,KAArB,CAvCjC;AAwCIO,IAAAA,KAAK,EAAE;AAxCX,GADY,EA2CZ;AACIV,IAAAA,KAAK,EAAE,KADX;AAEIC,IAAAA,SAAS,EAAE,KAFf;AAGIN,IAAAA,MAAM,EAAE,CAACgB,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACrB,GAAF,GAAQsB,CAAC,CAACtB;AAHhC,GA3CY,EAgDZ;AACIU,IAAAA,KAAK,EAAE,SADX;AAEIC,IAAAA,SAAS,EAAE,SAFf;AAGIP,IAAAA,OAAO,EAAE,CACL;AACIQ,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADK,EAKL;AACID,MAAAA,IAAI,EAAE,UADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KALK,CAHb;AAaII,IAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmBA,MAAM,CAACjB,OAAP,CAAesB,UAAf,CAA0BV,KAA1B,CAbjC;AAcIG,IAAAA,YAAY,EAAE,IAdlB;AAeII,IAAAA,KAAK,EAAE;AAfX,GAhDY,CAAhB;AAkEA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAEX,OAAhB;AAAyB,MAAA,UAAU,EAAEZ,IAArC;AAA2C,MAAA,QAAQ,EAAEK;AAArD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;KAtGuBN,K","sourcesContent":["import React from 'react';\r\nimport { Table } from 'antd';\r\n\r\nexport default function Films() {\r\n    const data = [\r\n        {\r\n            key: '1',\r\n            name: 'John Brown',\r\n            age: 32,\r\n            address: 'New York No. 1 Lake Park',\r\n        },\r\n        {\r\n            key: '2',\r\n            name: 'Jim Green',\r\n            age: 42,\r\n            address: 'London No. 1 Lake Park',\r\n        },\r\n        {\r\n            key: '3',\r\n            name: 'Joe Black',\r\n            age: 32,\r\n            address: 'Sidney No. 1 Lake Park',\r\n        },\r\n        {\r\n            key: '4',\r\n            name: 'Jim Red',\r\n            age: 32,\r\n            address: 'London No. 2 Lake Park',\r\n        },\r\n    ];\r\n    function onChange(pagination, filters, sorter, extra) {\r\n        console.log('params', pagination, filters, sorter, extra);\r\n    }\r\n    const columns = [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            filters: [\r\n                {\r\n                    text: 'Joe',\r\n                    value: 'Joe',\r\n                },\r\n                {\r\n                    text: 'Category 1',\r\n                    value: 'Category 1',\r\n                    children: [\r\n                        {\r\n                            text: 'Yellow',\r\n                            value: 'Yellow',\r\n                        },\r\n                        {\r\n                            text: 'Pink',\r\n                            value: 'Pink',\r\n                        },\r\n                    ],\r\n                },\r\n                {\r\n                    text: 'Category 2',\r\n                    value: 'Category 2',\r\n                    children: [\r\n                        {\r\n                            text: 'Green',\r\n                            value: 'Green',\r\n                        },\r\n                        {\r\n                            text: 'Black',\r\n                            value: 'Black',\r\n                        },\r\n                    ],\r\n                },\r\n            ],\r\n            filterMode: 'tree',\r\n            filterSearch: true,\r\n            onFilter: (value, record) => record.name.includes(value),\r\n            width: '30%',\r\n        },\r\n        {\r\n            title: 'Age',\r\n            dataIndex: 'age',\r\n            sorter: (a, b) => a.age - b.age,\r\n        },\r\n        {\r\n            title: 'Address',\r\n            dataIndex: 'address',\r\n            filters: [\r\n                {\r\n                    text: 'London',\r\n                    value: 'London',\r\n                },\r\n                {\r\n                    text: 'New York',\r\n                    value: 'New York',\r\n                },\r\n            ],\r\n            onFilter: (value, record) => record.address.startsWith(value),\r\n            filterSearch: true,\r\n            width: '40%',\r\n        },\r\n    ];\r\n    return (\r\n        <div>\r\n            <h3>Quản lý phim</h3>\r\n            <Table columns={columns} dataSource={data} onChange={onChange} />\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}