{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\BaiHocReactjs\\\\reactjs_bai5\\\\src\\\\components\\\\Loading\\\\Loading.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport style from './Loading.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Loading(props) {\n  _s();\n\n  const {\n    isLoading\n  } = useSelector(state => state.LoadingReducer);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.bgLoading,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://media1.giphy.com/media/wnYB3vx9t6PXiq1ubB/giphy.gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this);\n  } else {\n    return '';\n  }\n}\n\n_s(Loading, \"gZGrcRmI8a7ACzMWUSkGrvtnyX0=\", false, function () {\n  return [useSelector];\n});\n\n_c = Loading;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/BaiHocReactjs/reactjs_bai5/src/components/Loading/Loading.js"],"names":["React","Fragment","useSelector","style","Loading","props","isLoading","state","LoadingReducer","bgLoading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,sBAAlB;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAgBJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAAjC;;AACA,MAAIF,SAAJ,EAAe;AACX,wBACI;AAAK,MAAA,SAAS,EAAEH,KAAK,CAACM,SAAtB;AAAA,6BACI;AAAK,QAAA,GAAG,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH,GAND,MAMO;AACH,WAAO,EAAP;AACH;AACJ;;GAXuBL,O;UACEF,W;;;KADFE,O","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport style from './Loading.module.css';\r\nexport default function Loading(props) {\r\n    const { isLoading } = useSelector(state => state.LoadingReducer);\r\n    if (isLoading) {\r\n        return (\r\n            <div className={style.bgLoading}>\r\n                <img src='https://media1.giphy.com/media/wnYB3vx9t6PXiq1ubB/giphy.gif' />\r\n            </div>\r\n        );\r\n    } else {\r\n        return '';\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}