{"ast":null,"code":"import i18n from'i18next';import{initReactI18next}from'react-i18next';import Backend from'i18next-http-backend';import LanguageDetector from'i18next-browser-languagedetector';// don't want to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\ni18n// load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n// learn more: https://github.com/i18next/i18next-http-backend\n// want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\n.use(Backend)// detect user language\n// learn more: https://github.com/i18next/i18next-browser-languageDetector\n.use(LanguageDetector)// pass the i18n instance to react-i18next.\n.use(initReactI18next)// init i18next\n// for all options read: https://www.i18next.com/overview/configuration-options\n.init({fallbackLng:'vietnam',debug:true,whitelist:['china','english','vietnam'],interpolation:{escapeValue:false// not needed for react as it escapes by default\n}});export default i18n;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/BaiHocReactjs/reactjs_bai5/src/i18n.js"],"names":["i18n","initReactI18next","Backend","LanguageDetector","use","init","fallbackLng","debug","whitelist","interpolation","escapeValue"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CACA,OAASC,gBAAT,KAAiC,eAAjC,CAEA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kCAA7B,CACA;AACA;AACA;AAEAH,IACI;AACA;AACA;AAHA,CAICI,GAJL,CAISF,OAJT,CAKI;AACA;AANJ,CAOKE,GAPL,CAOSD,gBAPT,CAQI;AARJ,CASKC,GATL,CASSH,gBATT,CAUI;AACA;AAXJ,CAYKI,IAZL,CAYU,CACFC,WAAW,CAAE,SADX,CAEFC,KAAK,CAAE,IAFL,CAGFC,SAAS,CAAE,CAAE,OAAF,CAAW,SAAX,CAAsB,SAAtB,CAHT,CAIFC,aAAa,CAAE,CACXC,WAAW,CAAE,KAAO;AADT,CAJb,CAZV,EAsBA,cAAeV,CAAAA,IAAf","sourcesContent":["import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// don't want to use this?\r\n// have a look at the Quick start guide \r\n// for passing in lng and translations on init\r\n\r\ni18n\r\n    // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n    // learn more: https://github.com/i18next/i18next-http-backend\r\n    // want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\r\n    .use(Backend)\r\n    // detect user language\r\n    // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n    .use(LanguageDetector)\r\n    // pass the i18n instance to react-i18next.\r\n    .use(initReactI18next)\r\n    // init i18next\r\n    // for all options read: https://www.i18next.com/overview/configuration-options\r\n    .init({\r\n        fallbackLng: 'vietnam',\r\n        debug: true,\r\n        whitelist: [ 'china', 'english', 'vietnam' ],\r\n        interpolation: {\r\n            escapeValue: false, // not needed for react as it escapes by default\r\n        }\r\n    });\r\n\r\n\r\nexport default i18n;"]},"metadata":{},"sourceType":"module"}