{"ast":null,"code":"import { connection } from \"../../index\";\nimport { quanLyDatVeService } from \"../../service/QuanLyDatVeService\";\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../util/settings/config\";\nimport { CHUYEN_TAB, DAT_GHE, DAT_VE_HOAN_TAT, SET_CHI_TIET_PHONG_VE } from \"../types/QuanLyDatVeType\";\nimport { thongTinTaiKhoanAction } from \"./QuanLyNguoiDungAction\";\nexport const layChiTietPhongVeAction = maLichChieu => {\n  return async dispatch => {\n    try {\n      dispatch({\n        type: DISPLAY_LOADING\n      });\n      const result = await quanLyDatVeService.layChiTietPhongVe(maLichChieu);\n\n      if (result.status === 200) {\n        await dispatch({\n          type: SET_CHI_TIET_PHONG_VE,\n          chiTietPhongVe: result.data.content\n        });\n      }\n\n      dispatch({\n        type: HIDE_LOADING\n      });\n    } catch (error) {\n      console.log('error', error);\n    }\n  };\n};\nexport const datVeAction = thongtinDatVe => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: DISPLAY_LOADING\n      });\n      const result = await quanLyDatVeService.datVe(thongtinDatVe);\n      await dispatch(layChiTietPhongVeAction(thongtinDatVe.maLichChieu));\n      await dispatch({\n        type: DAT_VE_HOAN_TAT\n      });\n      await dispatch({\n        type: HIDE_LOADING\n      });\n      let userLogin = getState().QuanLyNguoiDungReducer.userLogin;\n      dispatch(thongTinTaiKhoanAction());\n      dispatch({\n        type: CHUYEN_TAB\n      });\n    } catch (err) {\n      dispatch({\n        type: HIDE_LOADING\n      });\n      console.log(err);\n    }\n  };\n};\nexport const datGheAction = (ghe, maLichChieu) => {\n  return async (dispatch, getState) => {\n    //đƯA THÔNG TIN LÊN REDUCER\n    await dispatch({\n      type: DAT_GHE,\n      gheDuocChon: ghe\n    }); //call api ve backend\n\n    let danhSachGheDangDat = getState().QuanLyDatVeReducer.danhSachGheDangDat;\n    let taiKhoan = getState().QuanLyNguoiDungReducer.userLogin.taiKhoan;\n    console.log(\"danhSachGheDangDat\", danhSachGheDangDat);\n    console.log(\"malichchieu\", maLichChieu);\n    danhSachGheDangDat = JSON.stringify(danhSachGheDangDat); //call api signalR\n\n    connection.invoke('datGhe', taiKhoan, danhSachGheDangDat, maLichChieu);\n  };\n};","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/BaiHocReactjs/reactjs_bai5/src/redux/actions/QuanLyDatVeAction.js"],"names":["connection","quanLyDatVeService","DISPLAY_LOADING","HIDE_LOADING","CHUYEN_TAB","DAT_GHE","DAT_VE_HOAN_TAT","SET_CHI_TIET_PHONG_VE","thongTinTaiKhoanAction","layChiTietPhongVeAction","maLichChieu","dispatch","type","result","layChiTietPhongVe","status","chiTietPhongVe","data","content","error","console","log","datVeAction","thongtinDatVe","getState","datVe","userLogin","QuanLyNguoiDungReducer","err","datGheAction","ghe","gheDuocChon","danhSachGheDangDat","QuanLyDatVeReducer","taiKhoan","JSON","stringify","invoke"],"mappings":"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","sourcesContent":["import { connection } from \"../../index\";\r\nimport { quanLyDatVeService } from \"../../service/QuanLyDatVeService\";\r\nimport { DISPLAY_LOADING, HIDE_LOADING } from \"../../util/settings/config\";\r\nimport { CHUYEN_TAB, DAT_GHE, DAT_VE_HOAN_TAT, SET_CHI_TIET_PHONG_VE } from \"../types/QuanLyDatVeType\";\r\nimport { thongTinTaiKhoanAction } from \"./QuanLyNguoiDungAction\";\r\n\r\nexport const layChiTietPhongVeAction = (maLichChieu) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch({\r\n                type: DISPLAY_LOADING\r\n            });\r\n            const result = await quanLyDatVeService.layChiTietPhongVe(maLichChieu);\r\n            if (result.status === 200) {\r\n                await dispatch({\r\n                    type: SET_CHI_TIET_PHONG_VE,\r\n                    chiTietPhongVe: result.data.content\r\n                });\r\n            }\r\n            dispatch({ type: HIDE_LOADING });\r\n        } catch (error) {\r\n            console.log('error', error);\r\n        }\r\n    };\r\n};\r\nexport const datVeAction = (thongtinDatVe) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        try {\r\n            dispatch({\r\n                type: DISPLAY_LOADING\r\n            });\r\n            const result = await quanLyDatVeService.datVe(thongtinDatVe);\r\n            await dispatch(layChiTietPhongVeAction(thongtinDatVe.maLichChieu));\r\n            await dispatch({ type: DAT_VE_HOAN_TAT });\r\n\r\n            await dispatch({ type: HIDE_LOADING });\r\n            let userLogin = getState().QuanLyNguoiDungReducer.userLogin;\r\n            dispatch(thongTinTaiKhoanAction());\r\n            dispatch({\r\n                type: CHUYEN_TAB\r\n            });\r\n\r\n        } catch (err) {\r\n            dispatch({\r\n                type: HIDE_LOADING\r\n            });\r\n            console.log(err);\r\n        }\r\n\r\n    };\r\n};\r\n\r\nexport const datGheAction = (ghe, maLichChieu) => {\r\n    return async (dispatch, getState) => {\r\n        //đƯA THÔNG TIN LÊN REDUCER\r\n        await dispatch({\r\n            type: DAT_GHE,\r\n            gheDuocChon: ghe\r\n        });\r\n        //call api ve backend\r\n        let danhSachGheDangDat = getState().QuanLyDatVeReducer.danhSachGheDangDat;\r\n        let taiKhoan = getState().QuanLyNguoiDungReducer.userLogin.taiKhoan;\r\n        console.log(\"danhSachGheDangDat\", danhSachGheDangDat);\r\n        console.log(\"malichchieu\", maLichChieu);\r\n        danhSachGheDangDat = JSON.stringify(danhSachGheDangDat);\r\n        //call api signalR\r\n        connection.invoke('datGhe', taiKhoan, danhSachGheDangDat, maLichChieu);\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}