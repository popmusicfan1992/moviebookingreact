{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\BaiHocReactjs\\\\reactjs_bai5\\\\src\\\\pages\\\\Admin\\\\Films\\\\Films.js\";\nimport React from 'react';\nimport { Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  filters: [{\n    text: 'Joe',\n    value: 'Joe'\n  }, {\n    text: 'Category 1',\n    value: 'Category 1',\n    children: [{\n      text: 'Yellow',\n      value: 'Yellow'\n    }, {\n      text: 'Pink',\n      value: 'Pink'\n    }]\n  }, {\n    text: 'Category 2',\n    value: 'Category 2',\n    children: [{\n      text: 'Green',\n      value: 'Green'\n    }, {\n      text: 'Black',\n      value: 'Black'\n    }]\n  }],\n  filterMode: 'tree',\n  filterSearch: true,\n  onFilter: (value, record) => record.name.includes(value),\n  width: '30%'\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n  filters: [{\n    text: 'London',\n    value: 'London'\n  }, {\n    text: 'New York',\n    value: 'New York'\n  }],\n  onFilter: (value, record) => record.address.startsWith(value),\n  filterSearch: true,\n  width: '40%'\n}];\nexport default function Films() {\n  const data = [{\n    key: '1',\n    name: 'John Brown',\n    age: 32,\n    address: 'New York No. 1 Lake Park'\n  }, {\n    key: '2',\n    name: 'Jim Green',\n    age: 42,\n    address: 'London No. 1 Lake Park'\n  }, {\n    key: '3',\n    name: 'Joe Black',\n    age: 32,\n    address: 'Sidney No. 1 Lake Park'\n  }, {\n    key: '4',\n    name: 'Jim Red',\n    age: 32,\n    address: 'London No. 2 Lake Park'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"films\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n_c = Films;\n\nvar _c;\n\n$RefreshReg$(_c, \"Films\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/BaiHocReactjs/reactjs_bai5/src/pages/Admin/Films/Films.js"],"names":["React","Table","columns","title","dataIndex","filters","text","value","children","filterMode","filterSearch","onFilter","record","name","includes","width","sorter","a","b","age","address","startsWith","Films","data","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;;AACA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,MADX;AAEIC,EAAAA,SAAS,EAAE,MAFf;AAGIC,EAAAA,OAAO,EAAE,CACL;AACIC,IAAAA,IAAI,EAAE,KADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GADK,EAKL;AACID,IAAAA,IAAI,EAAE,YADV;AAEIC,IAAAA,KAAK,EAAE,YAFX;AAGIC,IAAAA,QAAQ,EAAE,CACN;AACIF,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADM,EAKN;AACID,MAAAA,IAAI,EAAE,MADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KALM;AAHd,GALK,EAmBL;AACID,IAAAA,IAAI,EAAE,YADV;AAEIC,IAAAA,KAAK,EAAE,YAFX;AAGIC,IAAAA,QAAQ,EAAE,CACN;AACIF,MAAAA,IAAI,EAAE,OADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADM,EAKN;AACID,MAAAA,IAAI,EAAE,OADV;AAEIC,MAAAA,KAAK,EAAE;AAFX,KALM;AAHd,GAnBK,CAHb;AAqCIE,EAAAA,UAAU,EAAE,MArChB;AAsCIC,EAAAA,YAAY,EAAE,IAtClB;AAuCIC,EAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmBA,MAAM,CAACC,IAAP,CAAYC,QAAZ,CAAqBP,KAArB,CAvCjC;AAwCIQ,EAAAA,KAAK,EAAE;AAxCX,CADY,EA2CZ;AACIZ,EAAAA,KAAK,EAAE,KADX;AAEIC,EAAAA,SAAS,EAAE,KAFf;AAGIY,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,GAAF,GAAQD,CAAC,CAACC;AAHhC,CA3CY,EAgDZ;AACIhB,EAAAA,KAAK,EAAE,SADX;AAEIC,EAAAA,SAAS,EAAE,SAFf;AAGIC,EAAAA,OAAO,EAAE,CACL;AACIC,IAAAA,IAAI,EAAE,QADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GADK,EAKL;AACID,IAAAA,IAAI,EAAE,UADV;AAEIC,IAAAA,KAAK,EAAE;AAFX,GALK,CAHb;AAaII,EAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQK,MAAR,KAAmBA,MAAM,CAACQ,OAAP,CAAeC,UAAf,CAA0Bd,KAA1B,CAbjC;AAcIG,EAAAA,YAAY,EAAE,IAdlB;AAeIK,EAAAA,KAAK,EAAE;AAfX,CAhDY,CAAhB;AAkEA,eAAe,SAASO,KAAT,GAAiB;AAC5B,QAAMC,IAAI,GAAG,CACT;AACIC,IAAAA,GAAG,EAAE,GADT;AAEIX,IAAAA,IAAI,EAAE,YAFV;AAGIM,IAAAA,GAAG,EAAE,EAHT;AAIIC,IAAAA,OAAO,EAAE;AAJb,GADS,EAOT;AACII,IAAAA,GAAG,EAAE,GADT;AAEIX,IAAAA,IAAI,EAAE,WAFV;AAGIM,IAAAA,GAAG,EAAE,EAHT;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAPS,EAaT;AACII,IAAAA,GAAG,EAAE,GADT;AAEIX,IAAAA,IAAI,EAAE,WAFV;AAGIM,IAAAA,GAAG,EAAE,EAHT;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAbS,EAmBT;AACII,IAAAA,GAAG,EAAE,GADT;AAEIX,IAAAA,IAAI,EAAE,SAFV;AAGIM,IAAAA,GAAG,EAAE,EAHT;AAIIC,IAAAA,OAAO,EAAE;AAJb,GAnBS,CAAb;AA0BA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAhCuBE,K","sourcesContent":["import React from 'react';\r\nimport { Table } from 'antd';\r\nconst columns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'name',\r\n        filters: [\r\n            {\r\n                text: 'Joe',\r\n                value: 'Joe',\r\n            },\r\n            {\r\n                text: 'Category 1',\r\n                value: 'Category 1',\r\n                children: [\r\n                    {\r\n                        text: 'Yellow',\r\n                        value: 'Yellow',\r\n                    },\r\n                    {\r\n                        text: 'Pink',\r\n                        value: 'Pink',\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                text: 'Category 2',\r\n                value: 'Category 2',\r\n                children: [\r\n                    {\r\n                        text: 'Green',\r\n                        value: 'Green',\r\n                    },\r\n                    {\r\n                        text: 'Black',\r\n                        value: 'Black',\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        filterMode: 'tree',\r\n        filterSearch: true,\r\n        onFilter: (value, record) => record.name.includes(value),\r\n        width: '30%',\r\n    },\r\n    {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        sorter: (a, b) => a.age - b.age,\r\n    },\r\n    {\r\n        title: 'Address',\r\n        dataIndex: 'address',\r\n        filters: [\r\n            {\r\n                text: 'London',\r\n                value: 'London',\r\n            },\r\n            {\r\n                text: 'New York',\r\n                value: 'New York',\r\n            },\r\n        ],\r\n        onFilter: (value, record) => record.address.startsWith(value),\r\n        filterSearch: true,\r\n        width: '40%',\r\n    },\r\n];\r\nexport default function Films() {\r\n    const data = [\r\n        {\r\n            key: '1',\r\n            name: 'John Brown',\r\n            age: 32,\r\n            address: 'New York No. 1 Lake Park',\r\n        },\r\n        {\r\n            key: '2',\r\n            name: 'Jim Green',\r\n            age: 42,\r\n            address: 'London No. 1 Lake Park',\r\n        },\r\n        {\r\n            key: '3',\r\n            name: 'Joe Black',\r\n            age: 32,\r\n            address: 'Sidney No. 1 Lake Park',\r\n        },\r\n        {\r\n            key: '4',\r\n            name: 'Jim Red',\r\n            age: 32,\r\n            address: 'London No. 2 Lake Park',\r\n        },\r\n    ];\r\n    return (\r\n        <div>\r\n            films\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}